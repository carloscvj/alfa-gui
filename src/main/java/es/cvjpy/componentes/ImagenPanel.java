/*
 * ImagenPanel.java
 *
 * Created on 29 de septiembre de 2008, 15:56
 */
package es.cvjpy.componentes;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author CarlosVJ
 */
public class ImagenPanel extends javax.swing.JPanel {

    Boolean escalar = false;

    /**
     * Creates new form ImagenPanel
     */
    public ImagenPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private boolean real = false;
    public static final String PROP_REAL = "real";

    public boolean isReal() {
        return real;
    }

    public void setReal(boolean real) {
        boolean oldReal = this.real;
        this.real = real;
        firePropertyChange(PROP_REAL, oldReal, real);
    }
    private ImageIcon imagen;
    public static final String PROP_IMAGEN = "Imagen";

    public ImageIcon getImagen() {
        if (imagen == null) {
            imagen = new ImageIcon(getClass().getResource("/es/cvjpy/componentes/ImagenPanel.gif"));
        }
        if (this.getScale()) {
            //   imagen = new ImageIcon(imagen.getImage().getScaledInstance(this.getWidth(),this.getHeight(),Image.SCALE_SMOOTH));        
        }
        return imagen;
    }

    public void setImagen(ImageIcon Imagen) {
        ImageIcon oldImagen = this.imagen;
        this.imagen = Imagen;
        firePropertyChange(PROP_IMAGEN, oldImagen, Imagen);
    }

    public void refresh() {
        firePropertyChange(PROP_IMAGEN, null, imagen);
        this.repaint();
    }

    public Image getImage() {
        return this.getImagen().getImage();
    }

    public void setImage(Image image) {
        if (image != null) {
            this.setImagen(new ImageIcon(image));
        } else {
            this.setImagen(null);
        }
        this.repaint();
    }

    public void setScale(Boolean scale) {
        this.escalar = scale;
    }

    public Boolean getScale() {
        return escalar;
    }

    @Override
    public void paint(Graphics g) {
        if (getImagen() != null) {
            int w = getWidth();
            int h = getHeight();
            if (real) {
                w = imagen.getIconWidth();
                h = imagen.getIconHeight();
            }
            g.drawImage(imagen.getImage(), 0, 0, w, h, this);
        }
        super.paint(g);
    }
}
